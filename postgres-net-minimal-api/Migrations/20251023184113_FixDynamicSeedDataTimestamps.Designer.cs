// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using postgres_net_minimal_api.Data;

#nullable disable

namespace postgres_net_minimal_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251023184113_FixDynamicSeedDataTimestamps")]
    partial class FixDynamicSeedDataTimestamps
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.ApplicationModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "User and role management features",
                            DisplayOrder = 1,
                            IsActive = true,
                            Name = "User Management"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Blog posts, categories, tags, and comments",
                            DisplayOrder = 2,
                            IsActive = true,
                            Name = "Blog System"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "System administration and settings",
                            DisplayOrder = 3,
                            IsActive = true,
                            Name = "Administration"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ResourceKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ResourceKey")
                        .IsUnique()
                        .HasDatabaseName("IX_Feature_ResourceKey");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "User accounts management",
                            DisplayOrder = 1,
                            Name = "Users",
                            ResourceKey = "Users"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Role management",
                            DisplayOrder = 2,
                            Name = "Roles",
                            ResourceKey = "Roles"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "User profiles management",
                            DisplayOrder = 3,
                            Name = "Profiles",
                            ResourceKey = "Profiles"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Blog posts management",
                            DisplayOrder = 4,
                            Name = "Posts",
                            ResourceKey = "Posts"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Blog categories management",
                            DisplayOrder = 5,
                            Name = "Categories",
                            ResourceKey = "Categories"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Blog tags management",
                            DisplayOrder = 6,
                            Name = "Tags",
                            ResourceKey = "Tags"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Blog comments management",
                            DisplayOrder = 7,
                            Name = "Comments",
                            ResourceKey = "Comments"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Permission management",
                            DisplayOrder = 8,
                            Name = "Permissions",
                            ResourceKey = "Permissions"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "System statistics",
                            DisplayOrder = 9,
                            Name = "Statistics",
                            ResourceKey = "Statistics"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.FeatureAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FeatureId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("FeatureId", "ActionId")
                        .IsUnique()
                        .HasDatabaseName("IX_FeatureAction_FeatureId_ActionId");

                    b.ToTable("FeatureActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 2,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 3,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 4,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 5,
                            ActionId = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 6,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 7,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 8,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 9,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 10,
                            ActionId = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 11,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 3,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 12,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 3,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 13,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 3,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 14,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 3,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 15,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 16,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 17,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 18,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 19,
                            ActionId = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 20,
                            ActionId = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 21,
                            ActionId = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 22,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 5,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 23,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 5,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 24,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 5,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 25,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 5,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 26,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 6,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 27,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 6,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 28,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 6,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 29,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 6,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 30,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 31,
                            ActionId = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 32,
                            ActionId = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 33,
                            ActionId = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 34,
                            ActionId = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 35,
                            ActionId = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 36,
                            ActionId = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 37,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 8,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 38,
                            ActionId = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 8,
                            IsEnabled = true
                        },
                        new
                        {
                            Id = 39,
                            ActionId = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 9,
                            IsEnabled = true
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.ModuleFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FeatureId")
                        .HasColumnType("integer");

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("ModuleId", "FeatureId")
                        .IsUnique()
                        .HasDatabaseName("IX_ModuleFeature_ModuleId_FeatureId");

                    b.ToTable("ModuleFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 1,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 2,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 3,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 4,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 5,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 6,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 7,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 8,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureId = 9,
                            ModuleId = 3
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.PermissionAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ActionKey")
                        .IsUnique()
                        .HasDatabaseName("IX_PermissionAction_ActionKey");

                    b.ToTable("PermissionActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionKey = "View",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "View/read resources",
                            DisplayOrder = 1,
                            Name = "View"
                        },
                        new
                        {
                            Id = 2,
                            ActionKey = "Create",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Create new resources",
                            DisplayOrder = 2,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 3,
                            ActionKey = "Edit",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Edit existing resources",
                            DisplayOrder = 3,
                            Name = "Edit"
                        },
                        new
                        {
                            Id = 4,
                            ActionKey = "Delete",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Delete resources",
                            DisplayOrder = 4,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 5,
                            ActionKey = "Publish",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Publish content",
                            DisplayOrder = 5,
                            Name = "Publish"
                        },
                        new
                        {
                            Id = 6,
                            ActionKey = "Unpublish",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Unpublish content",
                            DisplayOrder = 6,
                            Name = "Unpublish"
                        },
                        new
                        {
                            Id = 7,
                            ActionKey = "Approve",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Approve pending content",
                            DisplayOrder = 7,
                            Name = "Approve"
                        },
                        new
                        {
                            Id = 8,
                            ActionKey = "Reject",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Reject pending content",
                            DisplayOrder = 8,
                            Name = "Reject"
                        },
                        new
                        {
                            Id = 9,
                            ActionKey = "Moderate",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Moderate and review content",
                            DisplayOrder = 9,
                            Name = "Moderate"
                        },
                        new
                        {
                            Id = 10,
                            ActionKey = "Manage",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Full management access",
                            DisplayOrder = 10,
                            Name = "Manage"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FeatureActionId")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FeatureActionId");

                    b.HasIndex("RoleId", "FeatureActionId")
                        .IsUnique()
                        .HasDatabaseName("IX_RolePermission_RoleId_FeatureActionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 1,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 2,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 3,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 4,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 5,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 6,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 7,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 8,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 9,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 10,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 11,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 12,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 13,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 14,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 15,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 16,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 17,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 18,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 19,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 20,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 21,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 22,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 23,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 24,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 25,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 26,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 27,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 28,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 29,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 30,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 31,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 32,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 33,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 34,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 35,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 36,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 37,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 38,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 39,
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 1,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 2,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 3,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 4,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 5,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 6,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 7,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 8,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 9,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 10,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 11,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 12,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 13,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 14,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 15,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 16,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 17,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 18,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 19,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 20,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 21,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 22,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 23,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 24,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 25,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 26,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 27,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 28,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 29,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 30,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 31,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 32,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 33,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 34,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 35,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 36,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 37,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 38,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 39,
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 11,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 13,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 15,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 16,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 17,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 18,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 19,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 20,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 22,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 26,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 30,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 31,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 91,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 32,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 92,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 33,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 93,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 39,
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222")
                        },
                        new
                        {
                            Id = 94,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 15,
                            RoleId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = 95,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 22,
                            RoleId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = 96,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 26,
                            RoleId = new Guid("33333333-3333-3333-3333-333333333333")
                        },
                        new
                        {
                            Id = 97,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FeatureActionId = 30,
                            RoleId = new Guid("33333333-3333-3333-3333-333333333333")
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Posts about technology and programming",
                            Name = "Technology",
                            Slug = "technology",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c2222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Step-by-step tutorials and guides",
                            Name = "Tutorials",
                            Slug = "tutorials",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("IsApproved");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.HasIndex("PostId", "IsApproved")
                        .HasDatabaseName("IX_Comments_PostId_IsApproved");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0001111-1111-1111-1111-111111111111"),
                            AuthorId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            Content = "Great article! The integration between EF Core 9 and PostgreSQL has really improved. Thanks for sharing!",
                            CreatedAt = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApproved = true,
                            PostId = new Guid("10571111-1111-1111-1111-111111111111"),
                            UpdatedAt = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c0002222-2222-2222-2222-222222222222"),
                            AuthorId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            Content = "Thank you! I'm glad you found it helpful. Let me know if you have any questions.",
                            CreatedAt = new DateTime(2024, 12, 26, 2, 0, 0, 0, DateTimeKind.Utc),
                            IsApproved = true,
                            ParentId = new Guid("c0001111-1111-1111-1111-111111111111"),
                            PostId = new Guid("10571111-1111-1111-1111-111111111111"),
                            UpdatedAt = new DateTime(2024, 12, 26, 2, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c0003333-3333-3333-3333-333333333333"),
                            AuthorId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            Content = "This is exactly what I was looking for! The Resource-Action pattern makes so much sense for complex authorization scenarios.",
                            CreatedAt = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApproved = true,
                            PostId = new Guid("10572222-2222-2222-2222-222222222222"),
                            UpdatedAt = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c0004444-4444-4444-4444-444444444444"),
                            AuthorId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            Content = "Minimal APIs are really powerful for this use case. Would love to see more about SEO optimization!",
                            CreatedAt = new DateTime(2024, 12, 31, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsApproved = true,
                            PostId = new Guid("10573333-3333-3333-3333-333333333333"),
                            UpdatedAt = new DateTime(2024, 12, 31, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c0005555-5555-5555-5555-555555555555"),
                            AuthorId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            Content = "I'm planning to implement this for my project. Do you have the source code available on GitHub?",
                            CreatedAt = new DateTime(2024, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsApproved = false,
                            PostId = new Guid("10573333-3333-3333-3333-333333333333"),
                            UpdatedAt = new DateTime(2024, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<int>("CommentCount")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Excerpt")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("FeaturedImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("character varying(350)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsPublished");

                    b.HasIndex("PublishedAt");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.HasIndex("IsPublished", "PublishedAt")
                        .HasDatabaseName("IX_Posts_Published_PublishedAt");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10571111-1111-1111-1111-111111111111"),
                            AuthorId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            CategoryId = new Guid("c1111111-1111-1111-1111-111111111111"),
                            CommentCount = 0,
                            Content = "<p>In this tutorial, we'll explore how to build a modern web API using .NET 9 and PostgreSQL. We'll cover Entity Framework Core 9, minimal APIs, and best practices for database design.</p><p>PostgreSQL is a powerful, open-source relational database that pairs perfectly with .NET for building scalable applications.</p>",
                            CreatedAt = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Excerpt = "Learn how to build modern web APIs using .NET 9 and PostgreSQL with this comprehensive guide.",
                            FeaturedImageUrl = "https://images.example.com/net9-postgres.jpg",
                            IsPublished = true,
                            PublishedAt = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "getting-started-with-net9-and-postgresql",
                            Title = "Getting Started with .NET 9 and PostgreSQL",
                            UpdatedAt = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            ViewCount = 1250
                        },
                        new
                        {
                            Id = new Guid("10572222-2222-2222-2222-222222222222"),
                            AuthorId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            CategoryId = new Guid("c2222222-2222-2222-2222-222222222222"),
                            CommentCount = 0,
                            Content = "<p>Role-Based Access Control (RBAC) is essential for securing modern applications. In this post, we dive deep into implementing granular permissions using the Resource-Action pattern.</p><p>We'll cover instance-level permissions, ownership validation, and how to combine type-level and instance-level authorization.</p>",
                            CreatedAt = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Excerpt = "Implementing fine-grained role-based access control with resource-action permissions in modern .NET applications.",
                            FeaturedImageUrl = "https://images.example.com/rbac-pattern.jpg",
                            IsPublished = true,
                            PublishedAt = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "advanced-rbac-patterns-aspnet-core",
                            Title = "Advanced RBAC Patterns in ASP.NET Core",
                            UpdatedAt = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            ViewCount = 867
                        },
                        new
                        {
                            Id = new Guid("10573333-3333-3333-3333-333333333333"),
                            AuthorId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            CategoryId = new Guid("c2222222-2222-2222-2222-222222222222"),
                            CommentCount = 0,
                            Content = "<p>Minimal APIs in .NET provide a streamlined way to build HTTP APIs with minimal ceremony. In this tutorial, we'll build a complete blog system from scratch.</p><p>Topics covered: Posts, Categories, Tags, Comments, SEO-friendly slugs, and more!</p>",
                            CreatedAt = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Excerpt = "Step-by-step guide to creating a complete blog system using .NET 9 Minimal APIs.",
                            FeaturedImageUrl = "https://images.example.com/minimal-api-blog.jpg",
                            IsPublished = true,
                            PublishedAt = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Slug = "building-blog-system-minimal-apis",
                            Title = "Building a Blog System with Minimal APIs",
                            UpdatedAt = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            ViewCount = 423
                        },
                        new
                        {
                            Id = new Guid("10574444-4444-4444-4444-444444444444"),
                            AuthorId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            CategoryId = new Guid("c1111111-1111-1111-1111-111111111111"),
                            CommentCount = 0,
                            Content = "<p>This is a draft post exploring performance optimization techniques including caching, database query optimization, and async patterns.</p>",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Excerpt = "Exploring various performance optimization strategies for .NET applications (Work in Progress).",
                            IsPublished = false,
                            Slug = "draft-performance-optimization-techniques",
                            Title = "Draft: Performance Optimization Techniques",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.PostTag", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = new Guid("10571111-1111-1111-1111-111111111111"),
                            TagId = new Guid("72222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10571111-1111-1111-1111-111111111111"),
                            TagId = new Guid("73333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10572222-2222-2222-2222-222222222222"),
                            TagId = new Guid("72222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10572222-2222-2222-2222-222222222222"),
                            TagId = new Guid("71111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10573333-3333-3333-3333-333333333333"),
                            TagId = new Guid("72222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10573333-3333-3333-3333-333333333333"),
                            TagId = new Guid("71111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10574444-4444-4444-4444-444444444444"),
                            TagId = new Guid("72222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PostId = new Guid("10574444-4444-4444-4444-444444444444"),
                            TagId = new Guid("71111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Bio")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GitHubHandle")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LinkedInHandle")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TwitterHandle")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90000000-0000-0000-0000-000000000000"),
                            Bio = "Super Administrator with unrestricted access to all system features. Responsible for platform management, user moderation, and system-wide configurations.",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GitHubHandle = "superadmin",
                            TwitterHandle = "@platform_admin",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("50000000-0000-0000-0000-000000000000"),
                            WebsiteUrl = "https://platform.example.com"
                        },
                        new
                        {
                            Id = new Guid("91111111-1111-1111-1111-111111111111"),
                            Bio = "System administrator and technical writer. Passionate about .NET technologies and modern software architecture.",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GitHubHandle = "admin-developer",
                            TwitterHandle = "@admin_dev",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            WebsiteUrl = "https://example.com/admin"
                        },
                        new
                        {
                            Id = new Guid("92222222-2222-2222-2222-222222222222"),
                            Bio = "Software developer specializing in C# and PostgreSQL. Love building scalable web applications.",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GitHubHandle = "johndoe",
                            LinkedInHandle = "https://linkedin.com/in/johndoe",
                            TwitterHandle = "@johndoe_dev",
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            WebsiteUrl = "https://johndoe.dev"
                        },
                        new
                        {
                            Id = new Guid("93333333-3333-3333-3333-333333333333"),
                            Bio = "Guest user exploring the platform features.",
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = new Guid("c3333333-3333-3333-3333-333333333333")
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("71111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "C#",
                            Slug = "csharp"
                        },
                        new
                        {
                            Id = new Guid("72222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = ".NET",
                            Slug = "dotnet"
                        },
                        new
                        {
                            Id = new Guid("73333333-3333-3333-3333-333333333333"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "PostgreSQL",
                            Slug = "postgresql"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MotherMaidenName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId", "LastName")
                        .HasDatabaseName("IX_Users_RoleId_LastName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("50000000-0000-0000-0000-000000000000"),
                            DateOfBirth = new DateOnly(1985, 1, 1),
                            Email = "superadmin@admin.com",
                            FirstName = "Super",
                            HashedPassword = "$2a$11$xKJAr8qR9Z5VyN3J9YZ.qOh4L0U8XZ0F8Y0W2N6Q5M3F6Y7Z8Q9Ke",
                            LastName = "Administrator",
                            RoleId = new Guid("10000000-0000-0000-0000-000000000000"),
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = new Guid("a1111111-1111-1111-1111-111111111111"),
                            DateOfBirth = new DateOnly(1990, 1, 1),
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            HashedPassword = "$2a$11$xKJAr8qR9Z5VyN3J9YZ.qOh4L0U8XZ0F8Y0W2N6Q5M3F6Y7Z8Q9Kf",
                            LastName = "System",
                            RoleId = new Guid("11111111-1111-1111-1111-111111111111"),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("b2222222-2222-2222-2222-222222222222"),
                            DateOfBirth = new DateOnly(1995, 5, 15),
                            Email = "user@example.com",
                            FirstName = "John",
                            HashedPassword = "$2a$11$xKJAr8qR9Z5VyN3J9YZ.qOh4L0U8XZ0F8Y0W2N6Q5M3F6Y7Z8Q9Kg",
                            LastName = "Doe",
                            RoleId = new Guid("22222222-2222-2222-2222-222222222222"),
                            UserName = "user"
                        },
                        new
                        {
                            Id = new Guid("c3333333-3333-3333-3333-333333333333"),
                            DateOfBirth = new DateOnly(2000, 1, 1),
                            Email = "guest@example.com",
                            FirstName = "Guest",
                            HashedPassword = "$2a$11$xKJAr8qR9Z5VyN3J9YZ.qOh4L0U8XZ0F8Y0W2N6Q5M3F6Y7Z8Q9Kh",
                            LastName = "User",
                            RoleId = new Guid("33333333-3333-3333-3333-333333333333"),
                            UserName = "guest"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10000000-0000-0000-0000-000000000000"),
                            Description = "Super administrator with unrestricted access to everything",
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Description = "System administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Description = "Standard user",
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Description = "Guest user with limited access",
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.FeatureAction", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Authorization.Models.PermissionAction", "Action")
                        .WithMany("FeatureActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Authorization.Models.Feature", "Feature")
                        .WithMany("FeatureActions")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.ModuleFeature", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Authorization.Models.Feature", "Feature")
                        .WithMany("ModuleFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Authorization.Models.ApplicationModule", "Module")
                        .WithMany("ModuleFeatures")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.RolePermission", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Authorization.Models.FeatureAction", "FeatureAction")
                        .WithMany("RolePermissions")
                        .HasForeignKey("FeatureActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Models.UserRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeatureAction");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Comment", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Models.Comment", "ParentComment")
                        .WithMany("Replies")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("postgres_net_minimal_api.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ParentComment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Post", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.PostTag", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("postgres_net_minimal_api.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Profile", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("postgres_net_minimal_api.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.User", b =>
                {
                    b.HasOne("postgres_net_minimal_api.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.ApplicationModule", b =>
                {
                    b.Navigation("ModuleFeatures");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.Feature", b =>
                {
                    b.Navigation("FeatureActions");

                    b.Navigation("ModuleFeatures");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.FeatureAction", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Authorization.Models.PermissionAction", b =>
                {
                    b.Navigation("FeatureActions");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Comment", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.Tag", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("postgres_net_minimal_api.Models.UserRole", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
